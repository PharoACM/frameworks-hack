export const abi = [
  {
    type: "constructor",
    inputs: [
      { name: "_pharoCover", type: "address", internalType: "address" },
      { name: "_admin", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DEFAULT_ADMIN_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "collectPremiums",
    inputs: [
      { name: "pharoId", type: "uint256", internalType: "uint256" },
      {
        name: "obelisk",
        type: "tuple",
        internalType: "struct PharoConstants.Obelisk",
        components: [
          { name: "timestamp", type: "uint256", internalType: "uint256" },
          { name: "pharoId", type: "uint32", internalType: "uint32" },
          {
            name: "cb_wallet_id",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "cb_policy_id",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          { name: "cb_premium", type: "uint256[]", internalType: "uint256[]" },
          { name: "cb_reward", type: "uint256[]", internalType: "uint256[]" },
          {
            name: "cb_rate_estimate",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "cb_min_cover",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "cb_funds_avail",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "cb_cover_bought",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "cb_cover_mult",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          { name: "cb_percentile", type: "uint16[]", internalType: "uint16[]" },
          {
            name: "cb_served_wallet_id",
            type: "address[][]",
            internalType: "address[][]",
          },
          {
            name: "cb_served_product_id",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "cb_served_value",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "cb_incompatible_LPs",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "lp_wallet_id",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "lp_product_id",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          { name: "lp_stake", type: "uint256[]", internalType: "uint256[]" },
          { name: "lp_reward", type: "uint256[]", internalType: "uint256[]" },
          {
            name: "lp_rate_estimate",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          { name: "lp_max_risk", type: "uint32[]", internalType: "uint32[]" },
          {
            name: "lp_cover_avail",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "lp_breakeven_rate",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "lp_served_wallet_id",
            type: "address[][]",
            internalType: "address[][]",
          },
          {
            name: "lp_served_policy_id",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "lp_served_value",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "lp_incompatible_CBs",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "confirmPharo",
    inputs: [{ name: "pharoId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "confirmed", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createPharo",
    inputs: [
      { name: "name", type: "string", internalType: "string" },
      { name: "description", type: "string", internalType: "string" },
      { name: "lifetime", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      { name: "success", type: "bool", internalType: "bool" },
      { name: "newPharoId", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getPharoIds",
    inputs: [],
    outputs: [{ name: "", type: "uint256[]", internalType: "uint256[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPharoTrueEventTime",
    inputs: [{ name: "pharoId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoleAdmin",
    inputs: [{ name: "role", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "payCover",
    inputs: [
      { name: "pharoId", type: "uint256", internalType: "uint256" },
      {
        name: "obelisk",
        type: "tuple",
        internalType: "struct PharoConstants.Obelisk",
        components: [
          { name: "timestamp", type: "uint256", internalType: "uint256" },
          { name: "pharoId", type: "uint32", internalType: "uint32" },
          {
            name: "cb_wallet_id",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "cb_policy_id",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          { name: "cb_premium", type: "uint256[]", internalType: "uint256[]" },
          { name: "cb_reward", type: "uint256[]", internalType: "uint256[]" },
          {
            name: "cb_rate_estimate",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "cb_min_cover",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "cb_funds_avail",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "cb_cover_bought",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "cb_cover_mult",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          { name: "cb_percentile", type: "uint16[]", internalType: "uint16[]" },
          {
            name: "cb_served_wallet_id",
            type: "address[][]",
            internalType: "address[][]",
          },
          {
            name: "cb_served_product_id",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "cb_served_value",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "cb_incompatible_LPs",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "lp_wallet_id",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "lp_product_id",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          { name: "lp_stake", type: "uint256[]", internalType: "uint256[]" },
          { name: "lp_reward", type: "uint256[]", internalType: "uint256[]" },
          {
            name: "lp_rate_estimate",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          { name: "lp_max_risk", type: "uint32[]", internalType: "uint32[]" },
          {
            name: "lp_cover_avail",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "lp_breakeven_rate",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "lp_served_wallet_id",
            type: "address[][]",
            internalType: "address[][]",
          },
          {
            name: "lp_served_policy_id",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "lp_served_value",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
          {
            name: "lp_incompatible_CBs",
            type: "uint256[][]",
            internalType: "uint256[][]",
          },
        ],
      },
      {
        name: "WoC",
        type: "tuple",
        internalType: "struct PharoConstants.WoC",
        components: [
          { name: "pharoId", type: "uint32", internalType: "uint32" },
          { name: "alpha", type: "uint32", internalType: "uint32" },
          { name: "beta", type: "uint32", internalType: "uint32" },
          { name: "rateProbable", type: "uint32", internalType: "uint32" },
          { name: "minConfidence", type: "uint32", internalType: "uint32" },
          { name: "maxConfidence", type: "uint32", internalType: "uint32" },
          { name: "gof", type: "uint32", internalType: "uint32" },
          { name: "gammaX", type: "uint32[]", internalType: "uint32[]" },
          { name: "gammaY", type: "uint32[]", internalType: "uint32[]" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pharoEventTriggered",
    inputs: [
      { name: "pharoId", type: "uint256", internalType: "uint256" },
      { name: "trueEventTime", type: "uint32", internalType: "uint32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "callerConfirmation", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOracleForPharo",
    inputs: [
      { name: "pharoId", type: "uint256", internalType: "uint256" },
      { name: "newOracle", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  { type: "event", name: "APIOutOfSync", inputs: [], anonymous: false },
  {
    type: "event",
    name: "CoverDistributionRequired",
    inputs: [
      {
        name: "pharoId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MarketUpdated",
    inputs: [
      {
        name: "pharoId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PharoCreated",
    inputs: [
      {
        name: "pharoId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      { name: "name", type: "string", indexed: false, internalType: "string" },
      {
        name: "description",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "lifetime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "birthdate",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "state",
        type: "uint8",
        indexed: false,
        internalType: "enum PharoMarket.PharoState",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PolicyUpdateError",
    inputs: [
      {
        name: "pharoId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "policyId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "reward",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "coverBought",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleAdminChanged",
    inputs: [
      { name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
      {
        name: "previousAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "newAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleGranted",
    inputs: [
      { name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleRevoked",
    inputs: [
      { name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdatePolicyPremiumError",
    inputs: [
      {
        name: "pharoId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "policyId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "premiumToPay",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AccessControlBadConfirmation", inputs: [] },
  {
    type: "error",
    name: "AccessControlUnauthorizedAccount",
    inputs: [
      { name: "account", type: "address", internalType: "address" },
      { name: "neededRole", type: "bytes32", internalType: "bytes32" },
    ],
  },
  {
    type: "error",
    name: "MarketUpdateError",
    inputs: [{ name: "pharoId", type: "uint256", internalType: "uint256" }],
  },
  { type: "error", name: "WrongRole", inputs: [] },
] as const;
